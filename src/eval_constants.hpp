#pragma once

#include "eval_types.hpp"

namespace Clockwork {

// clang-format off
inline const PScore PAWN_MAT   = S(281, 446);
inline const PScore KNIGHT_MAT = S(956, 1001);
inline const PScore BISHOP_MAT = S(974, 1066);
inline const PScore ROOK_MAT   = S(1452, 1806);
inline const PScore QUEEN_MAT  = S(3184, 3277);
inline const PScore TEMPO_VAL  = S(36, 16);

inline const PScore BISHOP_PAIR_VAL  = S(73, 196);
inline const PScore DOUBLED_PAWN_VAL = S(-48, -77);

inline const PScore POTENTIAL_CHECKER_VAL = S(-73, -2);
inline const std::array<PScore, 6> PAWN_PHALANX = {
    S(1, 21), S(54, 28), S(83, 71), S(191, 147), S(480, 568), S(1766, 1455),
};
inline const std::array<PScore, 5> DEFENDED_PAWN = {
    S(48, 47), S(51, 22), S(56, 38), S(105, 112), S(658, -135),
};
inline const std::array<PScore, 6> PASSED_PAWN = {
    S(-1, 4), S(-25, 37), S(-27, 89), S(44, 139), S(72, 246), S(17, 41),
};

inline const std::array<PScore, 9> KNIGHT_MOBILITY = {
    S(-219, -199), S(-113, -133), S(-59, -36), S(-8, -8), S(38, 13), S(58, 57), S(90, 55), S(115, 52), S(168, -29),
};
inline const std::array<PScore, 14> BISHOP_MOBILITY = {
    S(-134, -270), S(-82, -178), S(-22, -116), S(-9, -58), S(28, -26), S(42, -3), S(65, 5), S(72, 17), S(78, 28), S(79, 24), S(103, 13), S(162, -40), S(194, -53), S(263, -86),
};
inline const std::array<PScore, 15> ROOK_MOBILITY = {
    S(-217, -331), S(-88, -112), S(-43, -39), S(-23, -42), S(-9, -7), S(5, 8), S(24, 16), S(51, 12), S(77, 21), S(104, 29), S(128, 29), S(141, 34), S(187, 20), S(173, 22), S(272, -71),
};
inline const std::array<PScore, 28> QUEEN_MOBILITY = {
    S(68, 102), S(-627, 549), S(-212, -397), S(-156, -218), S(-115, -259), S(-82, -215), S(-115, -17), S(-93, -44), S(-79, -13), S(-77, 14), S(-68, 34), S(-66, 67), S(-43, 52), S(-32, 51), S(-23, 53), S(-11, 48), S(-24, 71), S(-1, 33), S(11, 21), S(44, -31), S(87, -80), S(116, -139), S(215, -217), S(414, -414), S(377, -423), S(948, -707), S(734, -631), S(1378, -1012),
};
inline const std::array<PScore, 9> KING_MOBILITY = {
    S(385, 805), S(86, 440), S(16, 486), S(18, 515), S(-2, 507), S(-25, 487), S(-9, 494), S(-1, 463), S(50, 340),
};

inline const std::array<PScore, 3> KNIGHT_KING_RING = {
    CS(0, 0), S(88, -39), S(156, -91),
};
inline const std::array<PScore, 3> BISHOP_KING_RING = {
    CS(0, 0), S(20, 0), S(124, -39),
};
inline const std::array<PScore, 5> ROOK_KING_RING = {
    CS(0, 0), S(68, -64), S(90, -81), S(139, -79), S(155, -129),
};
inline const std::array<PScore, 6> QUEEN_KING_RING = {
    CS(0, 0), S(-53, 38), S(-70, 49), S(9, -27), S(179, -125), S(415, -269),
};

inline const PScore PAWN_THREAT_KNIGHT = S(194, 71);
inline const PScore PAWN_THREAT_BISHOP = S(181, 76);
inline const PScore PAWN_THREAT_ROOK = S(159, 50);
inline const PScore PAWN_THREAT_QUEEN = S(125, -66);
inline const std::array<PScore, 48> PAWN_PSQT = {
    S(-113, 488),   S(16, 493),     S(162, 440),    S(318, 219),    S(266, 235),    S(288, 329),    S(158, 370),    S(224, 355),    //
    S(10, -7),      S(175, 14),     S(112, -66),    S(144, -174),   S(68, -176),    S(13, -90),     S(-35, -9),     S(-54, -20),    //
    S(-46, -68),    S(-31, -62),    S(-32, -108),   S(-39, -141),   S(-53, -140),   S(-98, -136),   S(-112, -65),   S(-135, -44),   //
    S(-40, -144),   S(-19, -106),   S(-54, -149),   S(-56, -151),   S(-74, -162),   S(-106, -140),  S(-145, -70),   S(-157, -90),   //
    S(-34, -178),   S(27, -174),    S(-35, -133),   S(-94, -118),   S(-87, -139),   S(-138, -134),  S(-143, -107),  S(-173, -110),  //
    S(-29, -179),   S(123, -177),   S(40, -137),    S(-58, -96),    S(-77, -152),   S(-102, -129),  S(-116, -87),   S(-151, -105),  //
};
inline const std::array<PScore, 64> KNIGHT_PSQT = {
    S(-403, -150),  S(-80, -70),    S(-555, 318),   S(-22, 58),     S(-333, 161),   S(-349, 179),   S(-404, -8),    S(-532, 54),    //
    S(84, -26),     S(101, 64),     S(269, -74),    S(53, 72),      S(135, 41),     S(115, -17),    S(-13, 18),     S(43, -47),     //
    S(32, 35),      S(37, 115),     S(232, 62),     S(141, 89),     S(175, 56),     S(54, 67),      S(67, 30),      S(-58, 19),     //
    S(118, 44),     S(34, 104),     S(92, 104),     S(61, 126),     S(82, 86),      S(73, 85),      S(2, 33),       S(15, 49),      //
    S(84, 30),      S(105, 37),     S(78, 77),      S(40, 73),      S(40, 85),      S(49, 84),      S(7, 38),       S(24, -56),     //
    S(-12, -17),    S(24, -29),     S(3, -20),      S(28, 49),      S(44, 47),      S(-42, 6),      S(-29, -9),     S(-75, -11),    //
    S(17, 74),      S(37, -17),     S(-15, -12),    S(-18, 12),     S(-25, 0),      S(-44, -28),    S(-29, -49),    S(-112, -107),  //
    S(-51, -8),     S(-3, -23),     S(49, -95),     S(35, -27),     S(63, -42),     S(0, -138),     S(-53, -38),    S(-166, -47),   //
};
inline const std::array<PScore, 64> BISHOP_PSQT = {
    S(-113, 107),   S(-54, 29),     S(-568, 134),   S(-282, 121),   S(-326, 142),   S(-418, 142),   S(-11, 81),     S(-22, 57),     //
    S(8, -32),      S(33, 69),      S(37, 56),      S(81, 0),       S(42, 34),      S(20, 53),      S(29, 32),      S(-64, 51),     //
    S(26, 73),      S(74, 74),      S(294, 34),     S(148, 34),     S(102, 43),     S(43, 81),      S(141, 26),     S(7, 84),       //
    S(27, 22),      S(64, 60),      S(143, 39),     S(143, 57),     S(152, 57),     S(69, 75),      S(67, 44),      S(-36, 66),     //
    S(40, -22),     S(40, 43),      S(54, 42),      S(96, 57),      S(96, 90),      S(23, 77),      S(37, 14),      S(27, -49),     //
    S(65, -23),     S(98, 2),       S(101, 4),      S(22, 60),      S(17, 69),      S(8, 78),       S(69, 9),       S(42, -45),     //
    S(22, -51),     S(101, -26),    S(45, -18),     S(18, 23),      S(8, -3),       S(47, -19),     S(-6, 15),      S(60, -105),    //
    S(42, 1),       S(17, 11),      S(3, 26),       S(14, -35),     S(-2, -31),     S(17, 6),       S(33, -62),     S(-46, 22),     //
};
inline const std::array<PScore, 64> ROOK_PSQT = {
    S(108, 30),     S(200, 34),     S(93, 78),      S(76, 86),      S(100, 60),     S(60, 60),      S(82, 58),      S(87, 61),      //
    S(120, 69),     S(166, 65),     S(238, 43),     S(150, 97),     S(147, 93),     S(63, 111),     S(26, 109),     S(50, 99),      //
    S(31, 76),      S(293, 8),      S(238, 23),     S(252, 4),      S(158, 39),     S(69, 79),      S(123, 47),     S(-18, 91),     //
    S(6, 57),       S(47, 55),      S(79, 46),      S(122, -6),     S(86, 23),      S(29, 83),      S(11, 71),      S(-76, 73),     //
    S(-116, 10),    S(16, 0),       S(-17, 30),     S(-15, 26),     S(-22, 21),     S(-57, 79),     S(-99, 77),     S(-118, 57),    //
    S(-106, -3),    S(8, -81),      S(-25, -30),    S(-59, -10),    S(-24, -34),    S(-113, 32),    S(-113, 14),    S(-118, 1),     //
    S(-158, 18),    S(-82, -50),    S(-41, -54),    S(-35, -41),    S(-51, -24),    S(-61, -20),    S(-117, -31),   S(-120, -33),   //
    S(-123, 0),     S(-92, 10),     S(-54, -26),    S(-20, -41),    S(-33, -21),    S(-41, -26),    S(-58, -39),    S(-87, -21),    //
};
inline const std::array<PScore, 64> QUEEN_PSQT = {
    S(48, 80),      S(58, 54),      S(84, 72),      S(-89, 225),    S(0, 119),      S(-58, 159),    S(47, 39),      S(-26, 37),     //
    S(91, 65),      S(-96, 257),    S(-60, 316),    S(-155, 335),   S(-108, 256),   S(-150, 274),   S(-71, 138),    S(-7, 34),      //
    S(-42, 188),    S(83, 167),     S(48, 207),     S(-20, 266),    S(-41, 212),    S(-84, 224),    S(6, 98),       S(-12, 20),     //
    S(47, 71),      S(27, 155),     S(16, 169),     S(-15, 244),    S(-21, 220),    S(-1, 117),     S(5, 48),       S(-21, 50),     //
    S(28, 88),      S(57, 66),      S(23, 136),     S(-10, 176),    S(-29, 185),    S(-25, 139),    S(-8, 22),      S(-14, -28),    //
    S(61, -137),    S(57, -20),     S(40, 57),      S(-39, 122),    S(6, 44),       S(-1, 49),      S(28, -57),     S(-3, -45),     //
    S(56, -250),    S(46, -307),    S(22, -126),    S(41, -44),     S(-3, -3),      S(48, -133),    S(31, -62),     S(-14, -35),    //
    S(-77, -58),    S(-69, -343),   S(-19, -287),   S(15, -210),    S(42, -120),    S(63, -212),    S(35, -155),    S(-21, -55),    //
};
inline const std::array<PScore, 64> KING_PSQT = {
    S(488, -698),   S(271, -130),   S(-34, -18),    S(-161, 51),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(361, -163),   S(10, 135),     S(-41, 163),    S(280, 76),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-23, 37),     S(109, 148),    S(171, 116),    S(224, 56),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-229, 60),    S(-11, 126),    S(132, 114),    S(104, 77),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-202, 1),     S(-35, 74),     S(34, 77),      S(-37, 124),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-146, -36),   S(65, -7),      S(-36, 60),     S(-87, 108),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(82, -121),    S(122, -48),    S(7, 22),       S(-110, 85),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-26, -186),   S(76, -142),    S(-54, -96),    S(-23, -125),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
};
// clang-format on

}
